
pipeline {
    agent any
    
    tools {
        
        nodejs 'node16'
    }
    
    environment {
        
        SCANNER_HOME= tool 'sonar-scanner'
    }

    stages {
        stage('Checkout from GITHUB') {
            steps {
               git 'https://github.com/RAJAMMA0808/2048_Game.git' 
            }
        }
        
        stage('Clean Workspace') {
            steps {
               cleanWs() 
            }
        }
        
        stage('Sonarqube Analysis') {
            steps {
               withSonarQubeEnv('sonar-server') {
                   sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Game \
                   -Dsonar.projectKey=Game '''
               }
            }
        }
        
        stage('Qaulity Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token'
                }
            }
        }
        
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
                
              }
           }

stage('Docker Build & Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh 'docker build -t 2048 .'
                        sh 'docker tag 2048 raji0808/2048:latest'
                        sh 'docker push raji0808/2048:latest'
                    }
                }
            }
        }
        
        stage('TRIVY IMAGE SCAN') {
            steps {
                sh 'trivy image raji0808/2048:latest > trivyimagereport.txt'

                  }
               }

stage('Deploy to container'){
            steps{
                sh 'docker run -d --name 2048 -p 3000:3000 raji0808/2048:latest'
            }
        }
     }
}
